import{_ as s,c as t,o as i,aQ as a}from"./chunks/framework.B_zefldW.js";const g=JSON.parse('{"title":"useUpload","description":"","frontmatter":{},"headers":[],"relativePath":"en-US/component/use-upload.md","filePath":"en-US/component/use-upload.md","lastUpdated":1749021099000}'),n={name:"en-US/component/use-upload.md"},d=a(`<h1 id="useupload" tabindex="-1">useUpload <a class="header-anchor" href="#useupload" aria-label="Permalink to &quot;useUpload&quot;">​</a></h1><p>Used for handling file upload and selection related logic.</p><h2 id="basic-usage" tabindex="-1">Basic Usage <a class="header-anchor" href="#basic-usage" aria-label="Permalink to &quot;Basic Usage&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { useUpload } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@/uni_modules/ht-ui-uni&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">startUpload</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">abort</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">chooseFile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">UPLOAD_STATUS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useUpload</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Choose files</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> files</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> chooseFile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  accept: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;image&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  multiple: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  maxCount: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Start upload</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> file</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  url: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;file://temp/image.png&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  status: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">UPLOAD_STATUS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PENDING</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  percent: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">startUpload</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(file, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  action: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://upload-url&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  onSuccess</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">res</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Upload successful&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, res)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  onError</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">err</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Upload failed&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, err) </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  onProgress</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">progress</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Upload progress&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, progress)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Abort upload</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">abort</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h2><h3 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Method Name</th><th>Description</th><th>Parameters</th><th>Return Value</th><th>Minimum Version</th></tr></thead><tbody><tr><td>startUpload</td><td>Start uploading file</td><td>file: UploadFileItem, options: UseUploadOptions</td><td>UniApp.UploadTask | void</td><td>-</td></tr><tr><td>abort</td><td>Abort upload</td><td>task?: UniApp.UploadTask</td><td>void</td><td>-</td></tr><tr><td>chooseFile</td><td>Choose file</td><td>options: ChooseFileOption</td><td>Promise&lt;ChooseFile[]&gt;</td><td>-</td></tr></tbody></table><h3 id="useuploadoptions" tabindex="-1">UseUploadOptions <a class="header-anchor" href="#useuploadoptions" aria-label="Permalink to &quot;UseUploadOptions&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Parameter</th><th>Description</th><th>Type</th><th>Default</th><th>Minimum Version</th></tr></thead><tbody><tr><td>action</td><td>Upload URL</td><td>string</td><td>-</td><td>-</td></tr><tr><td>header</td><td>Request headers</td><td>Record&lt;string, any&gt;</td><td>{}</td><td>-</td></tr><tr><td>name</td><td>Key corresponding to the file</td><td>string</td><td>&#39;file&#39;</td><td>-</td></tr><tr><td>formData</td><td>Other form data</td><td>Record&lt;string, any&gt;</td><td>{}</td><td>-</td></tr><tr><td>fileType</td><td>File type</td><td>&#39;image&#39; | &#39;video&#39; | &#39;audio&#39;</td><td>&#39;image&#39;</td><td>-</td></tr><tr><td>statusCode</td><td>Success status code</td><td>number</td><td>200</td><td>-</td></tr><tr><td>uploadMethod</td><td>Custom upload method</td><td>UploadMethod</td><td>-</td><td>-</td></tr><tr><td>onSuccess</td><td>Upload success callback</td><td>Function</td><td>-</td><td>-</td></tr><tr><td>onError</td><td>Upload failure callback</td><td>Function</td><td>-</td><td>-</td></tr><tr><td>onProgress</td><td>Upload progress callback</td><td>Function</td><td>-</td><td>-</td></tr></tbody></table><h3 id="choosefileoption" tabindex="-1">ChooseFileOption <a class="header-anchor" href="#choosefileoption" aria-label="Permalink to &quot;ChooseFileOption&quot;">​</a></h3><table tabindex="0"><thead><tr><th>Parameter</th><th>Description</th><th>Type</th><th>Default</th><th>Minimum Version</th></tr></thead><tbody><tr><td>multiple</td><td>Whether to support multiple file selection</td><td>boolean</td><td>false</td><td>-</td></tr><tr><td>sizeType</td><td>Size of selected images</td><td>Array</td><td>[&#39;original&#39;, &#39;compressed&#39;]</td><td>-</td></tr><tr><td>sourceType</td><td>Source of file selection</td><td>Array</td><td>[&#39;album&#39;, &#39;camera&#39;]</td><td>-</td></tr><tr><td>maxCount</td><td>Maximum number of selections</td><td>number</td><td>9</td><td>-</td></tr><tr><td>accept</td><td>Accepted file types</td><td>&#39;image&#39; | &#39;video&#39; | &#39;media&#39; | &#39;file&#39; | &#39;all&#39;</td><td>&#39;image&#39;</td><td>-</td></tr><tr><td>compressed</td><td>Whether to compress video</td><td>boolean</td><td>true</td><td>-</td></tr><tr><td>maxDuration</td><td>Maximum video duration (seconds)</td><td>number</td><td>60</td><td>-</td></tr><tr><td>camera</td><td>Camera direction</td><td>&#39;back&#39; | &#39;front&#39;</td><td>&#39;back&#39;</td><td>-</td></tr><tr><td>extension</td><td>Filter by file extension (H5 supports all type filtering, WeChat Mini Program supports filtering when all and file, other platforms do not support)</td><td>string[]</td><td>-</td><td></td></tr></tbody></table>`,11),e=[d];function l(h,p,r,k,o,E){return i(),t("div",null,e)}const y=s(n,[["render",l]]);export{g as __pageData,y as default};
